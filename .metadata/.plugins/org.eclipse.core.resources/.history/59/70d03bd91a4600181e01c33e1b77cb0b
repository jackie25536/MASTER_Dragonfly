//==================================================================================
// File name:  Dragonfly.c
//
// Author: Chun-Yi Kuo
//
// Date: 2018.04.22
//==================================================================================


//=====Include header files used in the main function=====//
#include "Dragonfly.h"

//=====Interrupt service routine=====//
void ISR_PWM(void);
__interrupt void ISR_PWM(void);

//=====Prototype statements for functions=====//
void main_init(void);
void calcIDPar(void);
void initDefRam(void);
void calcRam(void);
void initPwrPar(void);
void setupConfigPeripheral(void);

void main_alg(void);

Uint32 ISRCNT;
FIXVAR fixvar;

//Main code - starts here
void main(void)
{
    //=====System init.=====//
    main_init();

    //=====Calc par=====//
    calcIDPar();

    //=====All ram default=====//
    initDefRam();

    //=====Calc ram=====//
    calcRam();

    //=====Power parameters init.=====//
    initPwrPar();

    //=====Peripheral init.=====//
    setupConfigPeripheral();




    //=====Interrupt init.=====//
    DINT;
    InitPieCtrl();
    IER = 0x0000;
    IFR = 0x0000;
    InitPieVectTable();

    EALLOW; // This is needed to write to EALLOW protected registers
    PieVectTable.EPWM1_INT = ISR_PWM;
    IER |= M_INT3;
    EnableInterrupts(); //(Check意思)
    PieCtrlRegs.PIEIER3.bit.INTx1 = 1;
    EDIS;
    EINT;  // Enable Global interrupt INTM
    ERTM;  // Enable Global realtime interrupt DBGM

    //=====Forever loop=====//
    for(;;)
    {

    }
}


// EPWM1 ISR
__interrupt void ISR_PWM(void)
{
    CpuTimer1Regs.TIM.all ++;
    ISRCNT++;

    for(Uint32 i=0;i++;i<10000)
    {

    }


    fixvar.spare_min = CpuTimer1Regs.TIM.all;
    // Clear INT flag for this timer
    EPwm1Regs.ETCLR.bit.INT = 1;

    // Acknowledge this interrupt to receive more interrupts from group 3
    PieCtrlRegs.PIEACK.all = PIEACK_GROUP3;
}

void main_init(void)
{
    InitSysCtrl();

    Setup_GPIO();
}

void calcIDPar(void)
{

}

void initDefRam(void)
{

}
void calcRam(void)
{

}

void initPwrPar(void)
{


}

void setupConfigPeripheral(void)
{
    Setup_PWM_GPIO();

    Config_PWM();    //Not yet (Check要放在哪)
}

void main_alg()
{

}

//
// End of file
//
